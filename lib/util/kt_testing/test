import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:fiservonboardingexp/api/pdf_api.dart';
import 'package:fiservonboardingexp/screens/nav_app_overlay.dart';
import 'package:fiservonboardingexp/util/constants.dart';
import 'package:fiservonboardingexp/widgets/custom_text_box.dart';
import 'package:fiservonboardingexp/widgets/user_icons.dart';
import 'package:fiservonboardingexp/widgets/exp_bar.dart';
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';

class ProfilePage extends StatefulWidget {
  static const String routeName = '/Profile';
  const ProfilePage({super.key});

  static Route route() {
    return MaterialPageRoute(
      settings: const RouteSettings(name: routeName),
      builder: (_) => const ProfilePage(),
    );
  }

  @override
  State<ProfilePage> createState() => _ProfilePageState();
}

class _ProfilePageState extends State<ProfilePage> {
  Icon userIcon = const Icon(Icons.person);
  final currentUser = FirebaseAuth.instance.currentUser!;
  final userCollection = FirebaseFirestore.instance.collection('User');
  /*This will show an alert dialogue which will enable us to edit
  information about ourselves which will be saved into
  our database later.*/
  String interestingFacts = 'Tell us something interesting about you...';
  String hobbies = 'Hobbies go here...';
  String futureSelf = 'What/where will you be in 10 years?';
  bool sendButtonPressed = false;

  Future<void> editField(String fieldName) async {
    debugPrint('To implement "$fieldName" edit.');
    String newValue = '';

    await showDialog(
      context: context,
      builder: (context) => AlertDialog(
        backgroundColor: Colors.black,
        title: Text(
          'Edit $fieldName',
          style: const TextStyle(color: Colors.white),
        ),
        content: TextField(
          autofocus: true,
          style: const TextStyle(color: Colors.white),
          decoration: InputDecoration(
            hintText: fieldName == 'Future Self'
                ? 'In 10 years, I wanna be...'
                : fieldName == 'Interesting Facts'
                    ? 'Tell us something interesting...'
                    : 'What are your hobbies?',
            hintStyle: const TextStyle(
              color: Colors.grey,
            ),
          ),
          onChanged: (value) {
            newValue = value;
          },
        ),
        actions: [
          //cancel button to discard changes.
          TextButton(
            child: const Text(
              'Cancel',
              style: TextStyle(color: Colors.white),
            ),
            onPressed: () => Navigator.pop(context),
          ),

          //Save button to save data into database.
          //For now, this will just change the value on our text field.
          TextButton(
            child: const Text(
              'Save',
              style: TextStyle(color: Colors.white),
            ),
            onPressed: () => Navigator.of(context).pop(newValue),
          ),
        ],
      ),
    );
    if (newValue.isNotEmpty) {
      await userCollection.doc(currentUser.uid).update({fieldName: newValue});
    }
  }

  @override
  Widget build(BuildContext context) {
    // userIcon variable to change user icon.
    Icon userIcon = Icon(Icons.person);
    ExpBar expBar = ExpBar(barwidth: 200);

    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'Profile Page',
          style: TextStyle(
            color: Color(0xFFFF6600),
          ),
        ),
        backgroundColor: Colors.black,
      ),
      body: StreamBuilder<DocumentSnapshot>(
        stream: FirebaseFirestore.instance
            .collection("User")
            .doc(currentUser.uid)
            .snapshots(),
        builder: (context, snapshot) {
          if (snapshot.hasData) {
            final userData = snapshot.data!.data() as Map<String, dynamic>;
            final level = userData['Level'] ?? 1;

            void asyncMethod(void Function(int) callback) {
              expBar.level.then((int level) {
                callback(level);
              });
            }

            return ListView(
              children: [
                //This is just used for spacing between elements.
                const SizedBox(height: 30),
                //User profile picture, will be pulled from firebase.
                //For now, we will use a placeholder.
                UserIcon(
                  initialUserIcon: userIcon,
                  level: level,
                  onIconChanged: (newIcon) {
                    setState(() {
                      userIcon = newIcon;
                    });
                  },
                  userCollection: userCollection,
                  userId: currentUser.uid,
                  userData: userData,
                  iconColor: Color(
                      int.parse(userData['iconColor'].replaceFirst('#', '0x'))),
                ),

                //User fullname.
                //Using a place holder for now.
                const SizedBox(height: 10),

                Text(
                  '${userData['firstName']} ${userData['lastName']}',
                  textAlign: TextAlign.center,
                  style: TextStyle(
                    color: Colors.grey.shade700,
                    fontWeight: FontWeight.bold,
                    fontSize: 16,
                  ),
                ),
              ]
                
            );
          } else if (snapshot.hasError) {
            return Center(
              child: Text('Error${snapshot.error}'),
            );
          }
          return const Center(
            child: CircularProgressIndicator(),
          );
        },
      ),
    );
  }
}
